/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AEscrevaComandos extends PComandos
{
    private TEscreva _escreva_;
    private TEParentese _eParentese_;
    private PExpressaoAritmetica _expressaoAritmetica_;
    private TDParentese _dParentese_;
    private TPontoVirgula _pontoVirgula_;

    public AEscrevaComandos()
    {
        // Constructor
    }

    public AEscrevaComandos(
        @SuppressWarnings("hiding") TEscreva _escreva_,
        @SuppressWarnings("hiding") TEParentese _eParentese_,
        @SuppressWarnings("hiding") PExpressaoAritmetica _expressaoAritmetica_,
        @SuppressWarnings("hiding") TDParentese _dParentese_,
        @SuppressWarnings("hiding") TPontoVirgula _pontoVirgula_)
    {
        // Constructor
        setEscreva(_escreva_);

        setEParentese(_eParentese_);

        setExpressaoAritmetica(_expressaoAritmetica_);

        setDParentese(_dParentese_);

        setPontoVirgula(_pontoVirgula_);

    }

    @Override
    public Object clone()
    {
        return new AEscrevaComandos(
            cloneNode(this._escreva_),
            cloneNode(this._eParentese_),
            cloneNode(this._expressaoAritmetica_),
            cloneNode(this._dParentese_),
            cloneNode(this._pontoVirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEscrevaComandos(this);
    }

    public TEscreva getEscreva()
    {
        return this._escreva_;
    }

    public void setEscreva(TEscreva node)
    {
        if(this._escreva_ != null)
        {
            this._escreva_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._escreva_ = node;
    }

    public TEParentese getEParentese()
    {
        return this._eParentese_;
    }

    public void setEParentese(TEParentese node)
    {
        if(this._eParentese_ != null)
        {
            this._eParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eParentese_ = node;
    }

    public PExpressaoAritmetica getExpressaoAritmetica()
    {
        return this._expressaoAritmetica_;
    }

    public void setExpressaoAritmetica(PExpressaoAritmetica node)
    {
        if(this._expressaoAritmetica_ != null)
        {
            this._expressaoAritmetica_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expressaoAritmetica_ = node;
    }

    public TDParentese getDParentese()
    {
        return this._dParentese_;
    }

    public void setDParentese(TDParentese node)
    {
        if(this._dParentese_ != null)
        {
            this._dParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dParentese_ = node;
    }

    public TPontoVirgula getPontoVirgula()
    {
        return this._pontoVirgula_;
    }

    public void setPontoVirgula(TPontoVirgula node)
    {
        if(this._pontoVirgula_ != null)
        {
            this._pontoVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoVirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._escreva_)
            + toString(this._eParentese_)
            + toString(this._expressaoAritmetica_)
            + toString(this._dParentese_)
            + toString(this._pontoVirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._escreva_ == child)
        {
            this._escreva_ = null;
            return;
        }

        if(this._eParentese_ == child)
        {
            this._eParentese_ = null;
            return;
        }

        if(this._expressaoAritmetica_ == child)
        {
            this._expressaoAritmetica_ = null;
            return;
        }

        if(this._dParentese_ == child)
        {
            this._dParentese_ = null;
            return;
        }

        if(this._pontoVirgula_ == child)
        {
            this._pontoVirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._escreva_ == oldChild)
        {
            setEscreva((TEscreva) newChild);
            return;
        }

        if(this._eParentese_ == oldChild)
        {
            setEParentese((TEParentese) newChild);
            return;
        }

        if(this._expressaoAritmetica_ == oldChild)
        {
            setExpressaoAritmetica((PExpressaoAritmetica) newChild);
            return;
        }

        if(this._dParentese_ == oldChild)
        {
            setDParentese((TDParentese) newChild);
            return;
        }

        if(this._pontoVirgula_ == oldChild)
        {
            setPontoVirgula((TPontoVirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
