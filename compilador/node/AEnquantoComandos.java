/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import java.util.*;
import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AEnquantoComandos extends PComandos
{
    private TEnquanto _enquanto_;
    private TEParentese _eParentese_;
    private PExpressaoLogica _expressaoLogica_;
    private TDParentese _dParentese_;
    private TFaca _faca_;
    private final LinkedList<PComandos> _comandos_ = new LinkedList<PComandos>();
    private TFimEnquanto _fimEnquanto_;
    private TPontoVirgula _pontoVirgula_;

    public AEnquantoComandos()
    {
        // Constructor
    }

    public AEnquantoComandos(
        @SuppressWarnings("hiding") TEnquanto _enquanto_,
        @SuppressWarnings("hiding") TEParentese _eParentese_,
        @SuppressWarnings("hiding") PExpressaoLogica _expressaoLogica_,
        @SuppressWarnings("hiding") TDParentese _dParentese_,
        @SuppressWarnings("hiding") TFaca _faca_,
        @SuppressWarnings("hiding") List<?> _comandos_,
        @SuppressWarnings("hiding") TFimEnquanto _fimEnquanto_,
        @SuppressWarnings("hiding") TPontoVirgula _pontoVirgula_)
    {
        // Constructor
        setEnquanto(_enquanto_);

        setEParentese(_eParentese_);

        setExpressaoLogica(_expressaoLogica_);

        setDParentese(_dParentese_);

        setFaca(_faca_);

        setComandos(_comandos_);

        setFimEnquanto(_fimEnquanto_);

        setPontoVirgula(_pontoVirgula_);

    }

    @Override
    public Object clone()
    {
        return new AEnquantoComandos(
            cloneNode(this._enquanto_),
            cloneNode(this._eParentese_),
            cloneNode(this._expressaoLogica_),
            cloneNode(this._dParentese_),
            cloneNode(this._faca_),
            cloneList(this._comandos_),
            cloneNode(this._fimEnquanto_),
            cloneNode(this._pontoVirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEnquantoComandos(this);
    }

    public TEnquanto getEnquanto()
    {
        return this._enquanto_;
    }

    public void setEnquanto(TEnquanto node)
    {
        if(this._enquanto_ != null)
        {
            this._enquanto_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._enquanto_ = node;
    }

    public TEParentese getEParentese()
    {
        return this._eParentese_;
    }

    public void setEParentese(TEParentese node)
    {
        if(this._eParentese_ != null)
        {
            this._eParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eParentese_ = node;
    }

    public PExpressaoLogica getExpressaoLogica()
    {
        return this._expressaoLogica_;
    }

    public void setExpressaoLogica(PExpressaoLogica node)
    {
        if(this._expressaoLogica_ != null)
        {
            this._expressaoLogica_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expressaoLogica_ = node;
    }

    public TDParentese getDParentese()
    {
        return this._dParentese_;
    }

    public void setDParentese(TDParentese node)
    {
        if(this._dParentese_ != null)
        {
            this._dParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dParentese_ = node;
    }

    public TFaca getFaca()
    {
        return this._faca_;
    }

    public void setFaca(TFaca node)
    {
        if(this._faca_ != null)
        {
            this._faca_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._faca_ = node;
    }

    public LinkedList<PComandos> getComandos()
    {
        return this._comandos_;
    }

    public void setComandos(List<?> list)
    {
        for(PComandos e : this._comandos_)
        {
            e.parent(null);
        }
        this._comandos_.clear();

        for(Object obj_e : list)
        {
            PComandos e = (PComandos) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._comandos_.add(e);
        }
    }

    public TFimEnquanto getFimEnquanto()
    {
        return this._fimEnquanto_;
    }

    public void setFimEnquanto(TFimEnquanto node)
    {
        if(this._fimEnquanto_ != null)
        {
            this._fimEnquanto_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fimEnquanto_ = node;
    }

    public TPontoVirgula getPontoVirgula()
    {
        return this._pontoVirgula_;
    }

    public void setPontoVirgula(TPontoVirgula node)
    {
        if(this._pontoVirgula_ != null)
        {
            this._pontoVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoVirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._enquanto_)
            + toString(this._eParentese_)
            + toString(this._expressaoLogica_)
            + toString(this._dParentese_)
            + toString(this._faca_)
            + toString(this._comandos_)
            + toString(this._fimEnquanto_)
            + toString(this._pontoVirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._enquanto_ == child)
        {
            this._enquanto_ = null;
            return;
        }

        if(this._eParentese_ == child)
        {
            this._eParentese_ = null;
            return;
        }

        if(this._expressaoLogica_ == child)
        {
            this._expressaoLogica_ = null;
            return;
        }

        if(this._dParentese_ == child)
        {
            this._dParentese_ = null;
            return;
        }

        if(this._faca_ == child)
        {
            this._faca_ = null;
            return;
        }

        if(this._comandos_.remove(child))
        {
            return;
        }

        if(this._fimEnquanto_ == child)
        {
            this._fimEnquanto_ = null;
            return;
        }

        if(this._pontoVirgula_ == child)
        {
            this._pontoVirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._enquanto_ == oldChild)
        {
            setEnquanto((TEnquanto) newChild);
            return;
        }

        if(this._eParentese_ == oldChild)
        {
            setEParentese((TEParentese) newChild);
            return;
        }

        if(this._expressaoLogica_ == oldChild)
        {
            setExpressaoLogica((PExpressaoLogica) newChild);
            return;
        }

        if(this._dParentese_ == oldChild)
        {
            setDParentese((TDParentese) newChild);
            return;
        }

        if(this._faca_ == oldChild)
        {
            setFaca((TFaca) newChild);
            return;
        }

        for(ListIterator<PComandos> i = this._comandos_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PComandos) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._fimEnquanto_ == oldChild)
        {
            setFimEnquanto((TFimEnquanto) newChild);
            return;
        }

        if(this._pontoVirgula_ == oldChild)
        {
            setPontoVirgula((TPontoVirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
