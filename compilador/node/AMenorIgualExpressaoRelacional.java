/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AMenorIgualExpressaoRelacional extends PExpressaoRelacional
{
    private PExpressaoAritmetica _expressaoAritmetica_;
    private TMenorIgual _menorIgual_;
    private PExpressaoRelacional _expressaoRelacional_;

    public AMenorIgualExpressaoRelacional()
    {
        // Constructor
    }

    public AMenorIgualExpressaoRelacional(
        @SuppressWarnings("hiding") PExpressaoAritmetica _expressaoAritmetica_,
        @SuppressWarnings("hiding") TMenorIgual _menorIgual_,
        @SuppressWarnings("hiding") PExpressaoRelacional _expressaoRelacional_)
    {
        // Constructor
        setExpressaoAritmetica(_expressaoAritmetica_);

        setMenorIgual(_menorIgual_);

        setExpressaoRelacional(_expressaoRelacional_);

    }

    @Override
    public Object clone()
    {
        return new AMenorIgualExpressaoRelacional(
            cloneNode(this._expressaoAritmetica_),
            cloneNode(this._menorIgual_),
            cloneNode(this._expressaoRelacional_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMenorIgualExpressaoRelacional(this);
    }

    public PExpressaoAritmetica getExpressaoAritmetica()
    {
        return this._expressaoAritmetica_;
    }

    public void setExpressaoAritmetica(PExpressaoAritmetica node)
    {
        if(this._expressaoAritmetica_ != null)
        {
            this._expressaoAritmetica_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expressaoAritmetica_ = node;
    }

    public TMenorIgual getMenorIgual()
    {
        return this._menorIgual_;
    }

    public void setMenorIgual(TMenorIgual node)
    {
        if(this._menorIgual_ != null)
        {
            this._menorIgual_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._menorIgual_ = node;
    }

    public PExpressaoRelacional getExpressaoRelacional()
    {
        return this._expressaoRelacional_;
    }

    public void setExpressaoRelacional(PExpressaoRelacional node)
    {
        if(this._expressaoRelacional_ != null)
        {
            this._expressaoRelacional_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expressaoRelacional_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expressaoAritmetica_)
            + toString(this._menorIgual_)
            + toString(this._expressaoRelacional_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expressaoAritmetica_ == child)
        {
            this._expressaoAritmetica_ = null;
            return;
        }

        if(this._menorIgual_ == child)
        {
            this._menorIgual_ = null;
            return;
        }

        if(this._expressaoRelacional_ == child)
        {
            this._expressaoRelacional_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expressaoAritmetica_ == oldChild)
        {
            setExpressaoAritmetica((PExpressaoAritmetica) newChild);
            return;
        }

        if(this._menorIgual_ == oldChild)
        {
            setMenorIgual((TMenorIgual) newChild);
            return;
        }

        if(this._expressaoRelacional_ == oldChild)
        {
            setExpressaoRelacional((PExpressaoRelacional) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
