/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.lexer;

import java.io.*;
import compilador.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.NORMAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                                case 0: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPonto(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoispontos(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirgula(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPontovirgula(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEParentese(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDParentese(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEColchete(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDColchete(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEChave(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDChave(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMais(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenos(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMultiplicacao(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDivisao(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPorcentagem(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TResto(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtribuicao(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgual(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiferente(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorq(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorq(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorigual(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorigual(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TE(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOu(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNao(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEou(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPrograma(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInicio(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFim(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVariavel(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteiro(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReal(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaractere(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEscreva(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLeia(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConstante(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSe(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEntao(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSenao(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimse(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnquanto(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimenquanto(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPara(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFaca(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimpara(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaso(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAte(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRepita(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimrepita(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRetorne(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPacote(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNulo(line, pos); }
    Token new53(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTipo(text, line, pos); }
    Token new54(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVar(text, line, pos); }
    Token new55(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(line, pos); }
    Token new57(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentFim(line, pos); }
    Token new58(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentCorpo(text, line, pos); }
    Token new59(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEstrela(line, pos); }
    Token new60(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarra(line, pos); }
    Token new61(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentario(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {37, 37, 5}, {39, 39, 6}, {40, 40, 7}, {41, 41, 8}, {42, 42, 9}, {43, 43, 10}, {44, 44, 11}, {45, 45, 12}, {46, 46, 13}, {47, 47, 14}, {48, 57, 15}, {58, 58, 16}, {59, 59, 17}, {60, 60, 18}, {61, 61, 19}, {62, 62, 20}, {63, 64, 21}, {65, 90, 22}, {91, 91, 23}, {92, 92, 21}, {93, 93, 24}, {94, 94, 21}, {95, 95, 25}, {96, 96, 21}, {97, 97, 26}, {98, 98, 27}, {99, 99, 28}, {100, 100, 27}, {101, 101, 29}, {102, 102, 30}, {103, 104, 27}, {105, 105, 31}, {106, 107, 27}, {108, 108, 32}, {109, 109, 27}, {110, 110, 33}, {111, 111, 34}, {112, 112, 35}, {113, 113, 27}, {114, 114, 36}, {115, 115, 37}, {116, 117, 27}, {118, 118, 38}, {119, 122, 27}, {123, 123, 39}, {124, 124, 21}, {125, 125, 40}, {126, 127, 21}, },
            {{9, 13, -2}, {32, 32, 41}, },
            {{9, 32, -3}, },
            {{9, 9, 1}, {10, 10, 42}, {13, 32, -3}, },
            {{9, 32, -3}, {39, 39, 43}, },
            {},
            {{39, 39, 43}, {65, 90, 44}, {97, 122, 45}, },
            {{39, 39, 43}, },
            {{39, 39, 43}, },
            {{39, 39, 43}, },
            {{39, 39, 43}, },
            {{39, 39, 43}, },
            {{39, 39, 43}, {48, 57, 46}, },
            {{39, 39, 43}, },
            {{39, 39, 43}, {42, 42, 47}, {47, 47, 48}, },
            {{39, 39, 43}, {46, 46, 49}, {48, 57, 46}, },
            {{39, 39, 43}, {61, 61, 50}, },
            {{39, 39, 43}, },
            {{39, 39, 43}, {61, 61, 51}, {62, 62, 52}, },
            {{39, 39, 43}, },
            {{39, 39, 43}, {61, 61, 53}, },
            {{39, 39, 43}, },
            {{39, 39, 43}, {48, 57, 54}, {65, 90, 55}, {91, 91, 56}, {95, 95, 57}, {97, 122, 58}, },
            {{39, 39, 43}, },
            {{39, 39, 43}, },
            {{39, 122, -24}, },
            {{39, 95, -24}, {97, 115, 58}, {116, 116, 59}, {117, 122, 58}, },
            {{39, 122, -24}, },
            {{39, 95, -24}, {97, 97, 60}, {98, 110, 58}, {111, 111, 61}, {112, 122, 58}, },
            {{39, 95, -24}, {97, 109, 58}, {110, 110, 62}, {111, 111, 63}, {112, 114, 58}, {115, 115, 64}, {116, 122, 58}, },
            {{39, 95, -24}, {97, 97, 65}, {98, 104, 58}, {105, 105, 66}, {106, 122, 58}, },
            {{39, 109, -31}, {110, 110, 67}, {111, 122, 58}, },
            {{39, 95, -24}, {97, 100, 58}, {101, 101, 68}, {102, 122, 58}, },
            {{39, 95, -24}, {97, 97, 69}, {98, 116, 58}, {117, 117, 70}, {118, 122, 58}, },
            {{39, 95, -24}, {97, 116, 58}, {117, 117, 71}, {118, 122, 58}, },
            {{39, 95, -24}, {97, 97, 72}, {98, 113, 58}, {114, 114, 73}, {115, 122, 58}, },
            {{39, 100, -34}, {101, 101, 74}, {102, 122, 58}, },
            {{39, 100, -34}, {101, 101, 75}, {102, 122, 58}, },
            {{39, 95, -24}, {97, 97, 76}, {98, 122, 58}, },
            {{39, 39, 43}, },
            {{39, 39, 43}, },
            {{9, 32, -3}, },
            {{9, 32, -3}, },
            {},
            {},
            {},
            {{46, 57, -17}, },
            {},
            {{10, 10, 77}, {13, 13, 78}, {32, 32, 79}, {39, 127, 79}, },
            {{48, 57, 80}, },
            {},
            {},
            {},
            {},
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 57, 81}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 100, -34}, {101, 101, 82}, {102, 122, 58}, },
            {{48, 95, -24}, {97, 113, 58}, {114, 114, 83}, {115, 115, 84}, {116, 122, 58}, },
            {{48, 109, -31}, {110, 110, 85}, {111, 122, 58}, },
            {{48, 95, -24}, {97, 112, 58}, {113, 113, 86}, {114, 115, 58}, {116, 116, 87}, {117, 122, 58}, },
            {{48, 116, -36}, {117, 117, 88}, {118, 122, 58}, },
            {{48, 95, -24}, {97, 98, 58}, {99, 99, 89}, {100, 122, 58}, },
            {{48, 122, -24}, {231, 231, 90}, },
            {{48, 95, -24}, {97, 108, 58}, {109, 109, 91}, {110, 122, 58}, },
            {{48, 95, -24}, {97, 104, 58}, {105, 105, 92}, {106, 115, 58}, {116, 116, 93}, {117, 122, 58}, },
            {{48, 104, -69}, {105, 105, 94}, {106, 122, 58}, },
            {{48, 95, -24}, {97, 110, 58}, {111, 111, 95}, {112, 122, 58}, },
            {{48, 95, -24}, {97, 107, 58}, {108, 108, 96}, {109, 122, 58}, },
            {{48, 122, -24}, },
            {{48, 98, -66}, {99, 99, 97}, {100, 113, 58}, {114, 114, 98}, {115, 122, 58}, },
            {{48, 110, -71}, {111, 111, 99}, {112, 122, 58}, },
            {{48, 95, -24}, {97, 97, 100}, {98, 111, 58}, {112, 112, 101}, {113, 114, 58}, {115, 115, 102}, {116, 116, 103}, {117, 122, 58}, },
            {{48, 109, -31}, {110, 110, 104}, {111, 122, 58}, },
            {{48, 113, -62}, {114, 114, 105}, {115, 122, 58}, },
            {},
            {{10, 10, 106}, },
            {{10, 127, -50}, },
            {{48, 57, 80}, },
            {{48, 57, 81}, {93, 93, 107}, },
            {{48, 122, -24}, },
            {{48, 95, -24}, {97, 97, 108}, {98, 122, 58}, },
            {{48, 110, -71}, {111, 111, 109}, {112, 122, 58}, },
            {{48, 95, -24}, {97, 114, 58}, {115, 115, 110}, {116, 122, 58}, },
            {{48, 116, -36}, {117, 117, 111}, {118, 122, 58}, },
            {{48, 95, -24}, {97, 97, 112}, {98, 122, 58}, },
            {{48, 122, -24}, },
            {{48, 113, -62}, {114, 114, 113}, {115, 122, 58}, },
            {{97, 97, 114}, },
            {{32, 32, 115}, {48, 122, -24}, },
            {{48, 98, -66}, {99, 99, 116}, {100, 122, 58}, },
            {{48, 100, -34}, {101, 101, 117}, {102, 122, 58}, },
            {{48, 95, -24}, {97, 97, 118}, {98, 122, 58}, },
            {{48, 122, -24}, },
            {{48, 110, -71}, {111, 111, 119}, {112, 122, 58}, },
            {{48, 110, -71}, {111, 111, 120}, {112, 122, 58}, },
            {{48, 95, -24}, {97, 97, 121}, {98, 122, 58}, },
            {{48, 95, -24}, {97, 102, 58}, {103, 103, 122}, {104, 122, 58}, },
            {{48, 107, -72}, {108, 108, 123}, {109, 122, 58}, },
            {{48, 104, -69}, {105, 105, 124}, {106, 122, 58}, },
            {{48, 115, -28}, {116, 116, 125}, {117, 122, 58}, },
            {{48, 110, -71}, {111, 111, 126}, {112, 122, 58}, },
            {{48, 95, -24}, {97, 97, 127}, {98, 122, 58}, },
            {{48, 122, -24}, },
            {},
            {},
            {{48, 98, -66}, {99, 99, 128}, {100, 122, 58}, },
            {{48, 122, -24}, },
            {{48, 115, -28}, {116, 116, 129}, {117, 122, 58}, },
            {{48, 95, -24}, {97, 97, 130}, {98, 122, 58}, },
            {{48, 110, -71}, {111, 111, 131}, {112, 122, 58}, },
            {{48, 100, -34}, {101, 101, 132}, {102, 122, 58}, },
            {},
            {{101, 101, 133}, {112, 112, 134}, {114, 114, 135}, {115, 115, 136}, },
            {{48, 104, -69}, {105, 105, 137}, {106, 122, 58}, },
            {{48, 104, -69}, {105, 105, 138}, {106, 122, 58}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 115, -28}, {116, 116, 139}, {117, 122, 58}, },
            {{48, 122, -24}, },
            {{48, 113, -62}, {114, 114, 140}, {115, 122, 58}, },
            {{48, 122, -24}, },
            {{48, 115, -28}, {116, 116, 141}, {117, 122, 58}, },
            {{48, 110, -71}, {111, 111, 142}, {112, 122, 58}, },
            {{48, 113, -62}, {114, 114, 143}, {115, 122, 58}, },
            {{48, 110, -71}, {111, 111, 144}, {112, 122, 58}, },
            {{48, 115, -28}, {116, 116, 145}, {117, 122, 58}, },
            {{48, 95, -24}, {97, 97, 146}, {98, 122, 58}, },
            {{48, 109, -31}, {110, 110, 147}, {111, 122, 58}, },
            {{48, 122, -24}, },
            {{48, 95, -24}, {97, 117, 58}, {118, 118, 148}, {119, 122, 58}, },
            {{110, 110, 149}, },
            {{97, 97, 150}, },
            {{101, 101, 151}, },
            {{101, 101, 152}, },
            {{48, 110, -71}, {111, 111, 153}, {112, 122, 58}, },
            {{48, 113, -62}, {114, 114, 154}, {115, 122, 58}, },
            {{48, 100, -34}, {101, 101, 155}, {102, 122, 58}, },
            {{48, 95, -24}, {97, 97, 156}, {98, 122, 58}, },
            {{48, 95, -24}, {97, 97, 157}, {98, 122, 58}, },
            {{48, 122, -24}, },
            {{48, 109, -31}, {110, 110, 158}, {111, 122, 58}, },
            {{48, 122, -24}, },
            {{48, 100, -34}, {101, 101, 159}, {102, 122, 58}, },
            {{48, 109, -31}, {110, 110, 160}, {111, 122, 58}, },
            {{48, 115, -28}, {116, 116, 161}, {117, 122, 58}, },
            {{48, 95, -24}, {97, 97, 162}, {98, 122, 58}, },
            {{113, 113, 163}, },
            {{114, 114, 164}, },
            {{112, 112, 165}, },
            {},
            {{48, 122, -24}, },
            {{48, 110, -71}, {111, 111, 166}, {112, 122, 58}, },
            {{48, 122, -24}, },
            {{48, 108, -68}, {109, 109, 167}, {110, 122, 58}, },
            {{48, 122, -24}, },
            {{48, 100, -34}, {101, 101, 168}, {102, 122, 58}, },
            {{48, 113, -62}, {114, 114, 169}, {115, 122, 58}, },
            {{48, 115, -28}, {116, 116, 170}, {117, 122, 58}, },
            {{48, 110, -71}, {111, 111, 171}, {112, 122, 58}, },
            {{48, 122, -24}, },
            {{117, 117, 172}, },
            {{97, 97, 173}, },
            {{105, 105, 174}, },
            {{48, 122, -24}, },
            {{48, 95, -24}, {97, 97, 175}, {98, 122, 58}, },
            {{48, 122, -24}, },
            {{48, 100, -34}, {101, 101, 176}, {102, 122, 58}, },
            {{48, 100, -34}, {101, 101, 177}, {102, 122, 58}, },
            {{48, 122, -24}, },
            {{97, 97, 178}, },
            {},
            {{116, 116, 179}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{110, 110, 180}, },
            {{97, 97, 181}, },
            {{116, 116, 182}, },
            {},
            {{111, 111, 183}, },
            {},
        }
        { // COMMENT
            {{32, 32, 1}, {37, 37, 2}, {39, 39, 3}, {40, 40, 4}, {41, 41, 5}, {42, 42, 6}, {43, 43, 7}, {44, 44, 8}, {45, 45, 9}, {46, 46, 10}, {47, 47, 11}, {48, 57, 12}, {58, 58, 13}, {59, 59, 14}, {60, 60, 15}, {61, 61, 16}, {62, 62, 17}, {63, 90, 1}, {91, 91, 18}, {92, 92, 1}, {93, 93, 19}, {94, 96, 1}, {97, 97, 20}, {98, 98, 1}, {99, 99, 21}, {100, 100, 1}, {101, 101, 22}, {102, 102, 23}, {103, 104, 1}, {105, 105, 24}, {106, 107, 1}, {108, 108, 25}, {109, 109, 1}, {110, 110, 26}, {111, 111, 27}, {112, 112, 28}, {113, 113, 1}, {114, 114, 29}, {115, 115, 30}, {116, 117, 1}, {118, 118, 31}, {119, 122, 1}, {123, 123, 32}, {124, 124, 1}, {125, 125, 33}, {126, 127, 1}, },
            {{32, 32, 34}, {39, 39, 35}, {40, 41, 34}, {43, 46, 34}, {48, 127, 34}, },
            {},
            {{32, 46, -3}, {48, 64, 34}, {65, 90, 36}, {91, 96, 34}, {97, 122, 37}, {123, 127, 34}, },
            {{32, 127, -3}, },
            {{32, 127, -3}, },
            {{39, 39, 38}, {47, 47, 39}, },
            {{32, 127, -3}, },
            {{32, 127, -3}, },
            {{32, 46, -3}, {48, 57, 40}, {58, 127, 34}, },
            {{32, 127, -3}, },
            {{39, 39, 38}, {42, 42, 41}, {47, 47, 42}, },
            {{32, 41, -3}, {43, 45, 34}, {46, 46, 43}, {48, 127, -11}, },
            {{32, 46, -3}, {48, 60, 34}, {61, 61, 44}, {62, 127, 34}, },
            {{32, 127, -3}, },
            {{32, 60, -15}, {61, 61, 45}, {62, 62, 46}, {63, 127, 34}, },
            {{32, 127, -3}, },
            {{32, 60, -15}, {61, 61, 47}, {62, 127, 34}, },
            {{32, 127, -3}, },
            {{32, 127, -3}, },
            {{32, 46, -3}, {48, 115, 34}, {116, 116, 48}, {117, 127, 34}, },
            {{32, 46, -3}, {48, 96, 34}, {97, 97, 49}, {98, 110, 34}, {111, 111, 50}, {112, 127, 34}, },
            {{32, 46, -3}, {48, 109, 34}, {110, 110, 51}, {111, 111, 52}, {112, 114, 34}, {115, 115, 53}, {116, 127, 34}, },
            {{32, 96, -23}, {97, 97, 54}, {98, 104, 34}, {105, 105, 55}, {106, 127, 34}, },
            {{32, 109, -24}, {110, 110, 56}, {111, 127, 34}, },
            {{32, 46, -3}, {48, 100, 34}, {101, 101, 57}, {102, 127, 34}, },
            {{32, 96, -23}, {97, 97, 58}, {98, 116, 34}, {117, 117, 59}, {118, 127, 34}, },
            {{32, 46, -3}, {48, 116, 34}, {117, 117, 60}, {118, 127, 34}, },
            {{32, 96, -23}, {97, 97, 61}, {98, 113, 34}, {114, 114, 62}, {115, 127, 34}, },
            {{32, 100, -27}, {101, 101, 63}, {102, 127, 34}, },
            {{32, 100, -27}, {101, 101, 64}, {102, 127, 34}, },
            {{32, 96, -23}, {97, 97, 65}, {98, 127, 34}, },
            {{32, 127, -3}, },
            {{32, 127, -3}, },
            {{32, 32, 34}, {39, 41, 34}, {43, 127, -3}, },
            {{32, 127, -36}, },
            {{32, 127, -36}, },
            {{32, 127, -36}, },
            {},
            {},
            {{32, 41, -36}, {43, 127, -14}, },
            {},
            {{10, 10, 66}, {13, 13, 67}, {32, 32, 68}, {39, 127, 68}, },
            {{32, 46, -36}, {48, 57, 69}, {58, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 127, -36}, },
            {{32, 127, -36}, },
            {{32, 127, -36}, },
            {{32, 46, -36}, {48, 100, 34}, {101, 101, 70}, {102, 127, 34}, },
            {{32, 46, -36}, {48, 113, 34}, {114, 114, 71}, {115, 115, 72}, {116, 127, 34}, },
            {{32, 46, -36}, {48, 109, 34}, {110, 110, 73}, {111, 127, 34}, },
            {{32, 46, -36}, {48, 112, 34}, {113, 113, 74}, {114, 115, 34}, {116, 116, 75}, {117, 127, 34}, },
            {{32, 46, -36}, {48, 116, 34}, {117, 117, 76}, {118, 127, 34}, },
            {{32, 46, -36}, {48, 98, 34}, {99, 99, 77}, {100, 127, 34}, },
            {{32, 127, -36}, {231, 231, 78}, },
            {{32, 46, -36}, {48, 108, 34}, {109, 109, 79}, {110, 127, 34}, },
            {{32, 46, -36}, {48, 104, 34}, {105, 105, 80}, {106, 115, 34}, {116, 116, 81}, {117, 127, 34}, },
            {{32, 104, -58}, {105, 105, 82}, {106, 127, 34}, },
            {{32, 46, -36}, {48, 110, 34}, {111, 111, 83}, {112, 127, 34}, },
            {{32, 46, -36}, {48, 107, 34}, {108, 108, 84}, {109, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 98, -55}, {99, 99, 85}, {100, 113, 34}, {114, 114, 86}, {115, 127, 34}, },
            {{32, 110, -60}, {111, 111, 87}, {112, 127, 34}, },
            {{32, 46, -36}, {48, 96, 34}, {97, 97, 88}, {98, 111, 34}, {112, 112, 89}, {113, 114, 34}, {115, 115, 90}, {116, 116, 91}, {117, 127, 34}, },
            {{32, 109, -52}, {110, 110, 92}, {111, 127, 34}, },
            {{32, 113, -51}, {114, 114, 93}, {115, 127, 34}, },
            {},
            {{10, 10, 94}, },
            {{10, 127, -44}, },
            {{32, 127, -45}, },
            {{32, 127, -36}, },
            {{32, 96, -65}, {97, 97, 95}, {98, 127, 34}, },
            {{32, 110, -60}, {111, 111, 96}, {112, 127, 34}, },
            {{32, 46, -36}, {48, 114, 34}, {115, 115, 97}, {116, 127, 34}, },
            {{32, 116, -54}, {117, 117, 98}, {118, 127, 34}, },
            {{32, 96, -65}, {97, 97, 99}, {98, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 113, -51}, {114, 114, 100}, {115, 127, 34}, },
            {{97, 97, 101}, },
            {{32, 32, 102}, {39, 127, -36}, },
            {{32, 98, -55}, {99, 99, 103}, {100, 127, 34}, },
            {{32, 100, -50}, {101, 101, 104}, {102, 127, 34}, },
            {{32, 96, -65}, {97, 97, 105}, {98, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 110, -60}, {111, 111, 106}, {112, 127, 34}, },
            {{32, 110, -60}, {111, 111, 107}, {112, 127, 34}, },
            {{32, 96, -65}, {97, 97, 108}, {98, 127, 34}, },
            {{32, 46, -36}, {48, 102, 34}, {103, 103, 109}, {104, 127, 34}, },
            {{32, 107, -61}, {108, 108, 110}, {109, 127, 34}, },
            {{32, 104, -58}, {105, 105, 111}, {106, 127, 34}, },
            {{32, 46, -36}, {48, 115, 34}, {116, 116, 112}, {117, 127, 34}, },
            {{32, 110, -60}, {111, 111, 113}, {112, 127, 34}, },
            {{32, 96, -65}, {97, 97, 114}, {98, 127, 34}, },
            {{32, 127, -36}, },
            {},
            {{32, 98, -55}, {99, 99, 115}, {100, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 115, -92}, {116, 116, 116}, {117, 127, 34}, },
            {{32, 96, -65}, {97, 97, 117}, {98, 127, 34}, },
            {{32, 110, -60}, {111, 111, 118}, {112, 127, 34}, },
            {{32, 100, -50}, {101, 101, 119}, {102, 127, 34}, },
            {},
            {{32, 100, -50}, {101, 101, 120}, {102, 111, 34}, {112, 112, 121}, {113, 113, 34}, {114, 114, 122}, {115, 115, 123}, {116, 127, 34}, },
            {{32, 104, -58}, {105, 105, 124}, {106, 127, 34}, },
            {{32, 104, -58}, {105, 105, 125}, {106, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 127, -36}, },
            {{32, 115, -92}, {116, 116, 126}, {117, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 113, -51}, {114, 114, 127}, {115, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 115, -92}, {116, 116, 128}, {117, 127, 34}, },
            {{32, 110, -60}, {111, 111, 129}, {112, 127, 34}, },
            {{32, 113, -51}, {114, 114, 130}, {115, 127, 34}, },
            {{32, 110, -60}, {111, 111, 131}, {112, 127, 34}, },
            {{32, 115, -92}, {116, 116, 132}, {117, 127, 34}, },
            {{32, 96, -65}, {97, 97, 133}, {98, 127, 34}, },
            {{32, 109, -52}, {110, 110, 134}, {111, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 46, -36}, {48, 117, 34}, {118, 118, 135}, {119, 127, 34}, },
            {{32, 109, -52}, {110, 110, 136}, {111, 127, 34}, },
            {{32, 96, -65}, {97, 97, 137}, {98, 127, 34}, },
            {{32, 100, -50}, {101, 101, 138}, {102, 127, 34}, },
            {{32, 100, -50}, {101, 101, 139}, {102, 127, 34}, },
            {{32, 110, -60}, {111, 111, 140}, {112, 127, 34}, },
            {{32, 113, -51}, {114, 114, 141}, {115, 127, 34}, },
            {{32, 100, -50}, {101, 101, 142}, {102, 127, 34}, },
            {{32, 96, -65}, {97, 97, 143}, {98, 127, 34}, },
            {{32, 96, -65}, {97, 97, 144}, {98, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 109, -52}, {110, 110, 145}, {111, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 100, -50}, {101, 101, 146}, {102, 127, 34}, },
            {{32, 109, -52}, {110, 110, 147}, {111, 127, 34}, },
            {{32, 115, -92}, {116, 116, 148}, {117, 127, 34}, },
            {{32, 96, -65}, {97, 97, 149}, {98, 127, 34}, },
            {{32, 112, -53}, {113, 113, 150}, {114, 127, 34}, },
            {{32, 113, -51}, {114, 114, 151}, {115, 127, 34}, },
            {{32, 46, -36}, {48, 111, 34}, {112, 112, 152}, {113, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 127, -36}, },
            {{32, 110, -60}, {111, 111, 153}, {112, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 108, -57}, {109, 109, 154}, {110, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 100, -50}, {101, 101, 155}, {102, 127, 34}, },
            {{32, 113, -51}, {114, 114, 156}, {115, 127, 34}, },
            {{32, 115, -92}, {116, 116, 157}, {117, 127, 34}, },
            {{32, 110, -60}, {111, 111, 158}, {112, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 116, -54}, {117, 117, 159}, {118, 127, 34}, },
            {{32, 96, -65}, {97, 97, 160}, {98, 127, 34}, },
            {{32, 104, -58}, {105, 105, 161}, {106, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 96, -65}, {97, 97, 162}, {98, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 100, -50}, {101, 101, 163}, {102, 127, 34}, },
            {{32, 100, -50}, {101, 101, 164}, {102, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 96, -65}, {97, 97, 165}, {98, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 115, -92}, {116, 116, 166}, {117, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 127, -36}, },
            {{32, 127, -36}, },
            {{32, 109, -52}, {110, 110, 167}, {111, 127, 34}, },
            {{32, 96, -65}, {97, 97, 168}, {98, 127, 34}, },
            {{32, 115, -92}, {116, 116, 169}, {117, 127, 34}, },
            {{32, 127, -36}, },
            {{32, 110, -60}, {111, 111, 170}, {112, 127, 34}, },
            {{32, 127, -36}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // NORMAL
        {55, 55, 55, 55, 55, 14, -1, 4, 5, 12, 10, 2, 11, 0, 13, 53, 1, 3, 20, 17, 19, -1, 54, 6, 7, 54, 54, 54, 54, 23, 54, 54, 54, 54, 54, 54, 54, 54, 54, 8, 9, 55, 55, 53, 53, 53, 53, 56, -1, -1, 16, 22, 18, 21, 54, 54, -1, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 24, 54, 54, 54, 37, 54, 61, 61, -1, 53, -1, 47, 54, 54, 54, 54, 54, 26, 54, -1, 29, 54, 54, 54, 25, 54, 54, 54, 54, 54, 54, 54, 54, 54, 30, 61, 54, 54, 46, 54, 54, 54, 54, 44, -1, 54, 54, 35, 52, 54, 43, 54, 32, 54, 54, 54, 54, 54, 54, 54, 38, 54, -1, -1, -1, -1, 54, 54, 54, 54, 54, 15, 54, 39, 54, 54, 54, 54, -1, -1, -1, 40, 28, 54, 51, 54, 48, 54, 54, 54, 54, 34, -1, -1, -1, 31, 54, 50, 54, 54, 41, -1, 45, -1, 27, 33, 36, -1, -1, -1, 49, -1, 42, },
        // COMMENT
        {58, 58, 14, 58, 4, 5, 12, 10, 2, 11, 0, 13, 53, 1, 3, 20, 17, 19, 6, 7, 58, 58, 23, 58, 58, 58, 58, 58, 58, 58, 58, 58, 8, 9, 58, 53, 53, 53, 53, 57, 53, 56, -1, 58, 16, 22, 18, 21, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 24, 58, 58, 58, 37, 58, 61, 61, -1, 53, 47, 58, 58, 58, 58, 58, 26, 58, -1, 29, 58, 58, 58, 25, 58, 58, 58, 58, 58, 58, 58, 58, 58, 30, 61, 58, 46, 58, 58, 58, 58, 44, 58, 58, 58, 35, 52, 58, 43, 58, 32, 58, 58, 58, 58, 58, 58, 58, 38, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 15, 58, 39, 58, 58, 58, 58, 58, 58, 58, 40, 28, 58, 51, 58, 48, 58, 58, 58, 58, 34, 58, 58, 58, 31, 58, 50, 58, 58, 41, 58, 45, 58, 27, 33, 36, 58, 58, 58, 49, 58, 42, },

    };*/

    public static class State
    {
        public final static State NORMAL = new State(0);
        public final static State COMMENT = new State(1);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
