/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.analysis;

import compilador.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAFatorExpr(AFatorExpr node);
    void caseAMaisExpr(AMaisExpr node);
    void caseAMenosExpr(AMenosExpr node);
    void caseATermoFator(ATermoFator node);
    void caseAMultiplicacaoFator(AMultiplicacaoFator node);
    void caseADivisaoFator(ADivisaoFator node);
    void caseARestoFator(ARestoFator node);
    void caseAInteiroTermo(AInteiroTermo node);
    void caseAExprTermo(AExprTermo node);

    void caseTPonto(TPonto node);
    void caseTDoispontos(TDoispontos node);
    void caseTVirgula(TVirgula node);
    void caseTPontovirgula(TPontovirgula node);
    void caseTEParentese(TEParentese node);
    void caseTDParentese(TDParentese node);
    void caseTEColchete(TEColchete node);
    void caseTDColchete(TDColchete node);
    void caseTEChave(TEChave node);
    void caseTDChave(TDChave node);
    void caseTMais(TMais node);
    void caseTMenos(TMenos node);
    void caseTMultiplicacao(TMultiplicacao node);
    void caseTDivisao(TDivisao node);
    void caseTPorcentagem(TPorcentagem node);
    void caseTResto(TResto node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTIgual(TIgual node);
    void caseTDiferente(TDiferente node);
    void caseTMaiorq(TMaiorq node);
    void caseTMenorq(TMenorq node);
    void caseTMaiorigual(TMaiorigual node);
    void caseTMenorigual(TMenorigual node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTNao(TNao node);
    void caseTEou(TEou node);
    void caseTPrograma(TPrograma node);
    void caseTInicio(TInicio node);
    void caseTFim(TFim node);
    void caseTVariavel(TVariavel node);
    void caseTInteiro(TInteiro node);
    void caseTReal(TReal node);
    void caseTCaractere(TCaractere node);
    void caseTEscreva(TEscreva node);
    void caseTLeia(TLeia node);
    void caseTConstante(TConstante node);
    void caseTSe(TSe node);
    void caseTEntao(TEntao node);
    void caseTSenao(TSenao node);
    void caseTFimse(TFimse node);
    void caseTEnquanto(TEnquanto node);
    void caseTFimenquanto(TFimenquanto node);
    void caseTPara(TPara node);
    void caseTFaca(TFaca node);
    void caseTFimpara(TFimpara node);
    void caseTCaso(TCaso node);
    void caseTAte(TAte node);
    void caseTRepita(TRepita node);
    void caseTFimrepita(TFimrepita node);
    void caseTRetorne(TRetorne node);
    void caseTPacote(TPacote node);
    void caseTNulo(TNulo node);
    void caseTTipo(TTipo node);
    void caseTVar(TVar node);
    void caseTBlank(TBlank node);
    void caseTComment(TComment node);
    void caseTCommentFim(TCommentFim node);
    void caseTCommentCorpo(TCommentCorpo node);
    void caseTEstrela(TEstrela node);
    void caseTBarra(TBarra node);
    void caseTComentario(TComentario node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
